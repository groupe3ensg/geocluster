{"name":"Geocluster","tagline":"geoserver cluster project","body":"geocluster\r\n==========\r\n\r\n# Welcome to geocluster Page.\r\nGeocluster is a repository that represent an example of a geoserver cluster. In other words , we will create multiple geoserver containers with the same configuration and a long balacing that switch from one geoserver to another.\r\nWe will also create a postgres container that contains the postgis data base .\r\nThis page will guide you trough the geoserver cluster example. All you have to do is follow the steps :)\r\nps: It is supposed that you already have both vagrant and boot2docker.\r\n```\r\n$ env.bat\r\n$ vagrant up\r\n$ vagrant plugin install vagrant-proxyconf\r\n$ vagrant ssh\r\n```\r\n\r\nNow that you are in your docker virtual machine, run the script \"run.sh\".\r\n\r\n## The script \"run.sh\"\r\n\r\nIn this script:\r\n\r\n###pulling fig image\r\n```\r\n$ docker run -ti dduportal/fig\r\n```\r\n###creating the dfig alias\r\n```\r\n$ alias dfig=\"docker run -ti -v \\$(pwd):/app -v /vagrant:/vagrant -v /var/run/docker.sock:/var/run/docker.sock dduportal/fig\"\r\n```\r\n###switching to the fig directory\r\n```\r\n$ cd /vagrant/simple-db-fig\r\n```\r\n###creating containers\r\n```\r\n$ dfig up -d\r\n```\r\n###showing the containers already created\r\n```\r\n$ dfig ps\r\n```\r\nNow you have to run the script \"env_geoserver_tmp.sh\"\r\n## The script \"env_geoserver_tmp.sh\"\r\nin this script we configure our temporary geoserver container. We will create a workespace , a datastore and add a database. In the end we will copy the data_dir of that container in the temporary repertory in order to copy it later in the data_dir of all the other geoserver containers .   \r\n\r\n###creating the postgis database\r\n```\r\n$ dfig run dbserver psql -h dbserver -p 5432 -U postgres -f /vagrant/simple-db-fig/dab.sql\r\n```\r\n###retrieving the name and ip_adress of temporary geoserver\r\n```\r\n$ export name_tmp=$(docker ps | grep geoserver: |awk '{print $11}' | grep app_tmp) \r\n$ export ip_tmp=$(docker inspect --format '{{ .NetworkSettings.IPAddress }}' $1 $name_tmp)\r\n$ export no_proxy=${no_proxy},${ip_tmp}\r\n```\r\n###creation of a workspace\r\n```\r\n$ curl -v -u admin:geoserver -XPOST -H \"Content-type: text/xml\" -d \"<workspace><name>myws2</name></workspace>\" \r\nhttp://${ip_tmp}:8080/geoserver/rest/workspaces\r\n```\r\n###creation of a postgis database\r\n```\r\n$ curl -v -u admin:geoserver -XPOST -T mydb.xml -H \"Content-type: text/xml\" \r\nhttp://${ip_tmp}:8080/geoserver/rest/workspaces/myws2/datastores\r\n$ curl -v -u admin:geoserver -XGET http://${ip_tmp}:8080/geoserver/rest/workspaces/myws2/datastores/dab.xml\r\n```\r\n###adding a table\r\n```\r\n$ curl -v -u admin:geoserver -XPOST -H \"Content-type: text/xml\" -d \"<featureType><name>shapefile</name></featureType>\" http://${ip_tmp}:8080/geoserver/rest/workspaces/myws2/datastores/dab/featuretypes\r\n```\r\n#copying the data_dir in a repertory \"tmp\"\r\n```\r\n$ mkdir tmp\r\n$ sudo docker cp $name_tmp:/app/geoserver-2.6.1/data_dir /vagrant/simple-db-fig/tmp\r\n```\r\n###creating multiple geoservers\r\n```\r\n$ dfig scale dbgeoserver=3\r\n```\r\n###calling the dir_script\r\n```\r\n$ sh boucle_dir.sh\r\n```\r\n###killing the temporary geoserver and deleting the tmp repertory\r\n```\r\n$ docker kill $name_tmp\r\n$ rm -r tmp\r\n```\r\n## The script \"boucle_dir.sh\"\r\nIn this script we run a loop that copy the data_dir of the temporary geoserver in the other geoserver containers.\r\n\r\n```\r\n for i in $(docker ps | grep geoserver:  | grep app_dbgeoser | awk '{print $1}')\r\n\tdo\r\n\texport dir=$(docker inspect $i | grep \"\\\"/geoserver-data_dir\\\": \\\"\" | awk '{print $2}' | sed \"s/\\\"//g\" | sed \"s/,//g \")\r\n\techo \"chemin: ${dir}\"\r\n\tsudo cp -r /vagrant/simple-db-fig/tmp2/data_dir ${dir}\r\ndone \r\n```\r\n## The \"mydb.xml\"\r\nIn this file you have to replace in the host the ip adress with the ip adress of your container that you can retrieve by this two commands:\r\n\r\n```\r\ndfig ps\r\ndocker inspect ${name_of_your_container}\r\n```\r\n## The architecture\r\n![](https://github.com/groupe3ensg/geocluster/blob/master/archi.PNG)\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}